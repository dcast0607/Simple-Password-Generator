/*
Game Plan: Revision 1
Base code has been built out so we need to find a way to prompt the user
to select what type of password they would like.

We should present the user with 4 prompts:

Prompt 1: Would you like your password to include lower case characters?
Prompt 2: Would you like your password to include upper case characters?
Prompt 3: Would you like your password to include numbers?
Prompt 4: Would you like your password to include special characters?
Prompt 5: How long would you like the password to be?

We can use these prompts to ask the user if they would like to include these 
characters in their password, if the user presses "Ok" on the prompt, then we 
can use the characters, if the user presses "cancel" then we do not use the
characters. 

Answer to password will be used to generate array length.
*/

/* 
Game Plan: Revision 2
Work out logic to build password array length.
*/

/*
Game Plan: Revision 3
Work out logic to generate random characters based off the values selected by the user.
I think the best way to go about this would be to use ASCII values as characters have an
accompanying numerical value which makes it much much easier to pick a random value and
assign it to the array.

The basic logic here would be that if the user selects only "lower case characters" in our
prompt, we can create a random generator to pick a number between 97 and 122. As the user
picks more options we add more options to the random number generator to get a value. 

ASCII Character Codes: 
- Lower Case Character Codes: 97-122
- Upper Case Character Codes: 65-90
- Numerical Character Codes: 48-57
- Special Character Codes: 32–47 / 58–64 / 91–96 / 123–126

We also need to sort these character code arrays. 
*/

/*
Game Plan: Revision 4
Working out the logic to actually create the random password. 
*/

/*
Game Plan: Revision 5
Refactoring
- Comment all of the code ✅
- Clean up logic ✅
- Clean up code ✅
- Clean up random use cases that may be issues ✅

Biggest hurdle here is handling use cases in which the user selects an array than only
contains 10 values for example, but wants a password with 120 characters. My current code
will iterate through the array and create a new "password" array with 10 characters, the
rest of the 110 characters are iterated as null values.

Issue with logic here, returning empty/null values at times. I think the issue is that
we are trying to create x amount of characters, however, the original array "finalCharacterCodes"
is limited by the amount of characters in the array that the user has created based off their selections.
When testing, if you enter passwordLengthNumber of 120 characters, the max size we can create is a 9
digit password as that's the max number of characters defined 

  Added a janky solution that checks if the passwordLengthNumber is bigger than the available
  concated array that holds all of our character codes. If the passwordLengthNumber is bigger then 
  I increase the size of our array to have enough characters. 
*/
